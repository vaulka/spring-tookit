ext {
    lombokVersion = "1.18.28"

    // Spring boot
    springBootVersion = "3.1.1"
    // Spring
    springVersion = "6.0.10"
    // Spring cloud
    springCloudVersion = "2022.0.3"
    // Spring 相关依赖管理工具
    springDependencyManagementVersion = "1.1.0"

    // IP 地址解析
    ip2regionVersion = "2.7.0"
    // 系统资源监控
    oshiVersion = "6.4.3"
    // 校验
    // 需要兼容 org.springframework.boot:spring-boot-starter-validation 下的版本
    hibernateValidatorVersion = "8.0.0.Final"

    // 接口文档
    swaggerVersion = "2.2.12"
    springdocVersion = "2.1.0"
    kinfe4jVersion = "4.1.0"

    // Apache commons lang3
    commonsLang3Version = "3.12.0"

    // Junit
    junitJupiterVersion = "5.9.3"
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.1.1"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0"
    }
}

allprojects {

    group "com.vaulka.kit"
    version "3.1.1-beta-1"

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        mavenCentral()
    }
}

subprojects {
    if (!name.contains("kit")) {
        apply plugin: "java-library"

        jar {
            enabled = true
            archiveClassifier = ""
        }

        dependencies {
            compileOnly "org.projectlombok:lombok:$lombokVersion"
            annotationProcessor "org.projectlombok:lombok:$lombokVersion"

            testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        }

        test {
            useJUnitPlatform()
        }

    }

    if (name.contains("spring-boot")) {
        apply plugin: "org.springframework.boot"
        apply plugin: "io.spring.dependency-management"

        bootJar {
            enabled = false
        }

        dependencyManagement {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
            }
        }
    }

    if (name.contains("utils")) {
        tasks.register('copyJars', Copy) {
            from configurations.runtimeClasspath
            into "$buildDir/libs"
        }
    }
}
